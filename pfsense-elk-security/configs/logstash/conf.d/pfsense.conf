input {
  udp {
    port => 514
    type => "syslog"
  }
}

filter {
  # Parse syslog format
  if [type] == "syslog" {
    grok {
      match => { 
        "message" => "%{SYSLOGTIMESTAMP:timestamp} %{IPORHOST:firewall_host} %{DATA:program}: %{GREEDYDATA:message_body}" 
      }
      overwrite => [ "message" ]
    }
    
    # Parse timestamp
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss" ]
    }
    
    # Process pfSense firewall logs
    if [program] == "filterlog" {
      mutate {
        add_tag => [ "firewall" ]
      }
      
      grok {
        match => {
          "message_body" => "%{INT:rule_number},%{INT:sub_rule},%{DATA:anchor},%{INT:tracker},%{WORD:interface},%{WORD:reason},%{WORD:action},%{WORD:direction},%{INT:ip_version},%{DATA:tos},%{DATA:ecn},%{INT:ttl},%{INT:id},%{INT:offset},%{DATA:flags},%{INT:protocol_id},%{INT:length},%{IPV4:src_ip},%{IPV4:dest_ip},%{INT:src_port},%{INT:dest_port},%{GREEDYDATA:data_length}"
        }
      }
      
      # GeoIP lookup
      geoip {
        source => "src_ip"
        target => "src_geo"
        add_tag => [ "geoip_src" ]
      }
      
      geoip {
        source => "dest_ip"
        target => "dest_geo"
        add_tag => [ "geoip_dest" ]
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["192.168.10.20:9200"]
    user => "elastic"
    password => "${ELASTIC_PASSWORD}"
    
    if "firewall" in [tags] {
      index => "pfsense-firewall-%{+YYYY.MM.dd}"
    } else if "suricata" in [tags] {
      index => "pfsense-suricata-%{+YYYY.MM.dd}"
    } else {
      index => "pfsense-system-%{+YYYY.MM.dd}"
    }
  }
}
